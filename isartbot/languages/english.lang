# English language file

# Help

help_opening_note=Use `{0}{1} [command]` for more info on a command.\nYou can also use `{0}{1} [category]` for more info on a category.
commands_heading=Available commands
help_title=Help

# General

failure_title=Error
success_title=Success
confirmation_footer=React with üëç if you want to continue

missing_perms_error=Oops! It looks like you're missing one of the following permissions to run this command : {0}.
missing_bot_perms_error=Oops! It looks like the bot is missing one of the following permissions to run this command.
unauthorized_command=Only {0}s are able to use this command.
verified_role_required=You must have the {} role to be able to execute this command!

moderator_status=moderator
super_admin_status=super administrator
developper_status=developer
admin_status=administrator
denied_status=god
club_manager_status=club manager

command_not_found=This command does not exist.
no_subcommand=This command has no subcommand.
no_subcommand_named=This subcommand does not exist.

## Class extension

class_help=Manages class roles
class_description=Allows for easy creation, deletion and renaming of class roles.
class_invalid_argument=Invalid argument, please mention a valid class.

# Create
class_create_help=Creates a class
class_create_description=Creates a new class role.\n<name>: Name of the new class role
class_create_success=Class {0} successfully created!
class_create_error=Class {0} already exists.
class_create_name_error=Invalid class name.

# Delete
class_delete_help=Deletes a class
class_delete_description=Deletes a class role.\n<name>: Name or tag of the doomed class role.
class_delete_success=Deleting class named {0}...
class_delete_confirmation_title=Delete class?
class_delete_confirmation_description=Are you sure you want to delete the class {}?
class_delete_aborted=Aborted deletion.

# Rename
class_rename_help=Renames a class
class_rename_description=Renames a class role.\n<old_name>: Current name or tag of the class role\n<new_name>: New name of the class role
class_rename_error=This class already exists.
class_rename_success=Class @{} successfully renamed to {}!


## Game extension

game_help=Manages games roles
game_description=Allows for easy creation, deletion and renaming of game roles.
game_invalid_argument=Invalid game name.

# Add
game_add_help=Adds a game role to a user
game_add_description=Adds a game role to a user.\n<game> Name of the game to add
game_add_success=Role added! Have fun playing {}
game_add_failure=Failed to add you the role, I may don't have enough rights.

# Remove
game_remove_help=Removes a game role from a user
game_remove_description=Removes a game role from a user.\n<game> Name of the game to remove
game_remove_success=Successfully removed you the role {} !
game_remove_failure=Failed to remove you the role, I may don't have enough rights.

# Create
game_create_help=Creates a game
game_create_description=Adds a role corresponding to the game <name>. If you want your role to have a different name than which that Discord uses, precise it using the [discord_name] argument.
game_create_success=Game {} successfully created!
game_create_error_existing=Game "{}" already exists.
game_create_error_invalid=Invalid game name.

# Delete
game_delete_help=Deletes a game
game_delete_description=Deletes the role corresponding to this game.\n<name>: Name of the game
game_delete_success=Game @{} successfully deleted!
game_delete_confirmation_title=Delete game?
game_delete_confirmation_description=Are you sure you want to delete the game {}?
game_delete_aborted=Aborted deletion.

# Rename
game_rename_help=Renames a game
game_rename_description=Renames a game role.\n<old_name>: Current name of the game role\n<new_name>: New name of the game role

# List
game_list_help=Lists all the available games
game_list_description=Gives you the list of all the available games that have corresponding roles you can attribute yourself.
game_list_title=Games list
game_list_footer=Page {} out of {}

## Ext extension

ext_help=Manages (un/re)loading of extensions
ext_description=Allows for easy loading, unloading and reloading of the bot's extensions.

# Load
ext_load_help=Loads an extension
ext_load_description=Loads the desired extension.\n<ext>: Name of the extension
ext_load_success_desc=Extension loaded!
ext_load_failure_desc=Failed to load extension. Check logs for more information.

# Unload
ext_unload_help=Unloads an extension
ext_unload_description=Unloads the desired extension.\n<ext>: Name of the extension
ext_unload_success_desc=Extension unloaded!
ext_unload_failure_desc=Failed to unload extension. Check logs for more information.

# Reload
ext_reload_help=Reloads an extension
ext_reload_description=Reloads the desired extension.\n<ext>: Name of the extension
ext_reload_success_desc=Extension reloaded!
ext_reload_failure_desc=Failed to reload extension. Check logs for more information.


## Lang extension

lang_help=Manages languages
lang_description=Allows for easy switching of language for the bot.

# Reload
lang_reload_help=Reloads all languages
lang_reload_description=Reloads all the languages that are currently loaded.
lang_reload_success=All languages were successfully reloaded!

# List
lang_list_help=Lists all languages
lang_list_description=Shows the list of all the available languages of this bot.
lang_list_title=Available languages
lang_list_footer=Use !lang set <language> to change the current language.

# Set
lang_set_help=Sets the language
lang_set_description=Sets the language that is used by this bot.
lang_set=Language successfully set!
lang_not_available=This language does not exist, please use ``!lang list`` to have the full list of available languages.

# Key
lang_key_help=Retrieves a localization value from a key
lang_key_description=Retrieves the value corresponding to this localization key.\n<lang>: Target language\n<key>: Key to retrieve the value from


## Live role extension

live_role_help=Setups a live role
live_role_description=A live role is a role assigned when a user streams on Twitch / Youtube or Discord. This can be useful on big servers to promote streamers.
live_role_set_help=Sets a live role
live_role_set_description=Sets a live role and enables the live role feature. Disable it with `!liverole disable`
live_role_disable_help=Disables the live roles
live_role_disable_description=Disables the live roles. Re-enable it with `!liverole set <role>`

success_live_role_set=The live role for this server has successfully been set to
success_live_role_disable=Live roles have successfully been disabled for this server.


## Moderation extension

mod_help=Manages moderation
mod_description=Helps moderating the server.

# Log
mod_log_set_help=Sets a moderation channel
mod_log_set_description=Sets a channel te receive every moderation events such as deleted messages

mod_log_unset_help=Unsets a moderation channel
mod_log_unset_description=Unsets the moderation channel

success_mod_log_set=Successfully set the mod log channel to
success_mod_log_unset=The mod log channel has been unset

message_deleted=Message deleted

# Prune
mod_prune_help=Deletes a desired amount of messages
mod_prune_description=Deletes the latest messages in this text channel.\n<number>: Amount of the latest messages to delete\n[member]: Name of the member to restrict the message deletion to. (From the <number> messages, only those from [member] will be deleted)
success_prune=Last {0} message(s) have been removed.
fail_prune_size=Discord only allows the deletion of 100 messages at once, you tried to delete {0} of them.\nRetry with less messages !
fail_prune_other=Discord blocked me from deleting your messages, this is most likely because these messages where posted more than 14 days ago.

# Kick
mod_kick_help=Kicks a member
mod_kick_description=Kicks a member.\n<member>: Name of the member\n[reason]: Reason of the kick
success_kick={0} was kicked by {1} for reason: {2}.

# Ban
mod_ban_help=Bans a member
mod_ban_description=Bans a member.\n<member>: Name of the member\n[reason]: Reason of the ban
success_ban={0} was banned by {1} for reason: {2}.

mod_as_help=
mod_as_description=
mod_for_help=Allows the manipulation of roles for massive amount of members
mod_for_description=Adds or remove roles to a group of members.\nFor example `!mod for @LeagueOfLegends add @Tft` will add the role @Tft to all the holders of the @LeagueOfLegends role.\nThe different possible strategies are `add` or `remove`.
mod_for_success=Used the \'{}\' strategy with the roles {} on {}'.
mod_for_error=The strategy should either be `add` or `remove`!


## Starboard extension

starboard_description=Automatically shows upvoted posts in a dedicated channel.\nReact to a message with ‚≠ê and the bot will automatically add (or remove) it to the starboard.
starboard_set_description=Sets the starboard's channel.\nConsider allowing exclusive write access to the bot in this channel.\n<channel>: Channel to initialize the starboard into.
starboard_disable_description=Disables the starboard, use the `starboard set` command to re-enable it.
starboard_set_help=Sets the starboard's channel and enables it.
starboard_disable_help=Disables the starboard.

success_starboard_set=The starboard has successfully been configured on the following text channel.
success_starboard_unset=The starboard has successfully been disabled for this server.

starboard_minimum_help=Sets the minimum star count for the starboard.
starboard_minimum_description=Sets the minimum star count requiered to shows upvoted posts in the starboard.
starboard_minimum_success=Minimum star count is now {0} for this server.
starboard_minimum_error=Minimum star count must be between 1 and 100.

## Test extension

denied_failure=Something went wrong!
test_wait=The process has been paused 2 seconds for testing.
user_has_no_groups=has no special bot privileges.
user_has_groups=has the following bot privileges.
test=Everything seems to be working fine!


## SAR extension

sar_help=Manages role attribution
sar_description=Allows for easy attribution of roles, marking them as self-assignable.
sar_non_existant_role={} isn't a self assignable role.
sar_invalid_role_error={} is not a valid role.

# Create
sar_create_help=Makes a role self-assignable
sar_create_description=Marks a role as self-assignable, allowing users to assign it to themselves.
sar_role_created={} is now a self assignable role.
sar_role_already_exists_error={} is already a self assignable role.

# Delete
sar_delete_help=Makes a role non-self-assignable
sar_delete_description=Removes a self-assignable role, preventing users from assigning it to themselves.
sar_role_deleted={} is no longer a self assignable role.

# List
sar_list_help=Lists all the self-assignable roles
sar_list_description=Shows the list of all the self-assignable roles.\n[page]: Page to be listed
sar_list_title=Self assignable roles list
sar_list_footer=Page {} out of {}

# Iam
iam_help=Assigns a role to yourself
iam_description=Assigns a role to yourself.\n<role>: Name of the role you want assigned to you
iam_success=You now have the role {}!
iam_failure=Failed to add the role {}. I may not have enough permissions.

# Iamn
iamn_help=Removes a role from yourself
iamn_description=Removes a role from yourself.\n<role>: Name of the role you want unassigned from you
iamn_success=You don't have the {} role anymore.
iamn_failure=Failed to remove the role {}. I may not have enough permissions.


## Test

test_help=Helps testing the bot
test_description=Provides commands to test the features and limits of the bot.

test_commands_help_help=Runs help on every command
test_commands_help_description=Runs the command "help" on every command.

test_groups_help=Displays bot privileges of a user
test_groups_description=Displays bot privileges of a user.\n[member]: Member to display the privileges of

test_error_help=Raises an unexpected exception
test_error_description=Raises an unexpected exception.

test_delay_help=Waits for 2 seconds
test_delay_description=Waits for 2 seconds.

test_denied_help=Should never show
test_denied_description=Should never execute.


## Foodtruck

foodtruck_help=Prints a list of upcoming foodtrucks
foodtruck_description=Prints the list of every upcoming foodtrucks
foodtruck_list_title=Upcoming foodtrucks:
foodtruck_list_empty=Such empty ¬Ø\_(„ÉÑ)_/¬Ø


## Reservation

reservation_help=Assists club managers for room reservation.
reservation_description=Assists club managers for room reservation.
reservation_list_help=Prints the list of all current reservations and their status.
reservation_list_description=Prints the list of all current reservations and their status.
reservation_list_title=Reservation list
reservation_list_error=Couldn't retrieve the list from the Calendar API. Please reload the extension to try fixing the issue.
reservation_notify_help=Sends a mail containing all pending reservation.
reservation_notify_description=Sends a mail containing all pending reservation. Please use it in absolute necessity since a mail is already sent regularly.
reservation_notify_confirmation_title=Send a mail for validation
reservation_notify_confirmation_description=Are you sure you want to send a mail to Emilie? 
reservation_notify_success=Mail sent to Emilie!
reservation_notify_aborted=Mail not sent to Emilie.
reservation_notify_error=Unable to access the Gmail API. Please reload the extension to try fixing the issue.
reservation_notify_send_error=Unable to send the mail. Please reload the extension to try fixing the issue.
reservation_notify_template_error=Unable to send the mail: the template is not found.